services:
  db:
    image: postgres:16
    container_name: pickup_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-soccer_app}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-yourpassword}
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  mailhog:
    image: axllent/mailpit:latest
    container_name: pickup_mailhog
    ports:
      - "8026:8025"  # Web UI only; app reaches SMTP via service name 'mailhog' on port 1025

  redis:
    image: redis:7-alpine
    container_name: pickup_redis
    command: ["redis-server", "--appendonly", "yes"]
    # No host port mapping needed; app connects via service name 'redis'

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: pickup_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-admin123}
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: pickup_prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./docker/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    depends_on:
      - app

  grafana:
    image: grafana/grafana:latest
    container_name: pickup_grafana
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin123}
      GF_USERS_ALLOW_SIGN_UP: false
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/monitoring/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus

  app:
    build:
      context: .
    container_name: pickup_app
    depends_on:
      - db
      - mailhog
      - redis
      - rabbitmq
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL:-jdbc:postgresql://db:5432/soccer_app}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD:-yourpassword}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO:-create-drop}

      # Mail (acts as health source and for welcome emails)
      SPRING_MAIL_HOST: ${SPRING_MAIL_HOST:-mailhog}
      SPRING_MAIL_PORT: ${SPRING_MAIL_PORT:-1025}

      # Redis (available for staging/scale; disabled below by default)
      SPRING_DATA_REDIS_HOST: ${SPRING_DATA_REDIS_HOST:-redis}
      SPRING_DATA_REDIS_PORT: ${SPRING_DATA_REDIS_PORT:-6379}
      CHAT_REDIS_ENABLED: ${CHAT_REDIS_ENABLED:-false}

      # RabbitMQ configuration
      SPRING_RABBITMQ_HOST: ${SPRING_RABBITMQ_HOST:-rabbitmq}
      SPRING_RABBITMQ_PORT: ${SPRING_RABBITMQ_PORT:-5672}
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_USER:-admin}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_PASS:-admin123}

      # JWT secret (REQUIRED; default only for local dev; override in prod)
      SECURITY_JWT_SECRET: ${SECURITY_JWT_SECRET:-dev-insecure-secret-change-me}

      # Swagger in dev
      SPRINGDOC_SWAGGER_UI_ENABLED: ${SPRINGDOC_SWAGGER_UI_ENABLED:-true}
      SPRINGDOC_API_DOCS_ENABLED: ${SPRINGDOC_API_DOCS_ENABLED:-true}

      # Login rate limit (per IP per minute)
      SECURITY_LOGIN_RATE_LIMIT: ${SECURITY_LOGIN_RATE_LIMIT:-20}

      # Activate default profile (no specific profile)
      # SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-}
    ports:
      - "8080:8080"

volumes:
  db_data:
  rabbitmq_data:
  prometheus_data:
  grafana_data:
