# -------------------------------------------------------------------
# App
# -------------------------------------------------------------------
spring.application.name=PickupSportsApp
server.port=8080

# Enable OpenAPI JSON and Swagger UI
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
# Serve the UI at the route you're opening in the browser
springdoc.swagger-ui.path=/swagger-ui/index.html
# Explicitly point the UI to the OpenAPI endpoints
# Help Swagger UI resolve the spec/config when custom UI path is used
springdoc.swagger-ui.config-url=/v3/api-docs/swagger-config
springdoc.swagger-ui.url=/v3/api-docs

spring.jackson.time-zone=UTC
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# -------------------------------------------------------------------
# DataSource (PostgreSQL)
# -------------------------------------------------------------------
# Database configuration for Docker PostgreSQL (can be overridden by profiles)
spring.datasource.url=jdbc:postgresql://db:5432/soccer_app
spring.datasource.username=postgres
spring.datasource.password=B!mesh123
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=30000

# -------------------------------------------------------------------
# JPA/Hibernate
# -------------------------------------------------------------------
# Use Flyway for schema evolution (disable Hibernate auto-DDL)
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.open-in-view=false
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.default_batch_fetch_size=50
spring.jpa.properties.hibernate.query.in_clause_parameter_padding=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# -------------------------------------------------------------------
# Flyway
# -------------------------------------------------------------------
spring.flyway.locations=classpath:db/migration
# Baseline initialized; keep false to prevent re-baselining on subsequent runs.
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=1
spring.flyway.enabled=true
spring.flyway.validate-on-migrate=false

# -------------------------------------------------------------------
# Security / JWT
# -------------------------------------------------------------------
# Allow override via env var SECURITY_JWT_SECRET; provide a secure default >= 32 bytes
security.jwt.secret=${SECURITY_JWT_SECRET:bLzOR2h96wI6A3WyOoK_AsZaZqYawJmm5FWLEDCmDikMMMdmEdWLTEhFBC05bWi1}
security.jwt.issuer=pickup-sports-app
security.jwt.audience=pickup-sports-clients
security.jwt.expiration-minutes=120
security.jwt.header=Authorization
security.jwt.prefix=Bearer 
# Throttle login attempts (per IP per minute). Can be overridden via env SECURITY_LOGIN_RATE_LIMIT
security.login.rate-limit=20

# -------------------------------------------------------------------
# CORS
# -------------------------------------------------------------------
app.cors.allowed-origins=http://localhost:3000
app.cors.allowed-methods=GET,POST,PUT,PATCH,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.exposed-headers=Authorization,Content-Type
app.cors.allow-credentials=false

# -------------------------------------------------------------------
# XAI service (placeholders)
# -------------------------------------------------------------------
xai.api.url=http://localhost:8080/mock-xai
xai.api.key=test-key
xai.api.timeout-ms=5000

app.media.base-path=./media
app.media.base-url=/media
app.media.max-avatar-bytes=2097152
spring.servlet.multipart.max-file-size=2MB
spring.servlet.multipart.max-request-size=2MB


# -------------------------------------------------------------------
# Logging
# -------------------------------------------------------------------
logging.level.root=WARN
logging.level.org.springframework.web=WARN
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=DEBUG
logging.level.com.bmessi.pickupsportsapp=INFO

logging.pattern.level=%5p [%X{requestId}]

# Point to MailHogs SMTP server
spring.mail.host=mailhog
spring.mail.port=1025
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false

# Sender information
app.mail.from=noreply@pickupsportsapp.com
app.mail.from-name=Pickup Sports

# enable redis fan-out (set false to fall back to local in-process fanout)
chat.redis.enabled=false

# Spring Data Redis (Boot autoconfiguration)
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.timeout=2000

# Enable features for full functionality
spring.batch.job.enabled=true
spring.mail.enabled=true
spring.websocket.enabled=true
spring.amqp.enabled=true



