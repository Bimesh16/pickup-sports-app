# Development Environment Configuration
spring:
  profiles:
    active: dev
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/pickup_sports_dev
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  
  # Flyway Configuration
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
  
  # Redis Configuration (for caching)
  data:
    redis:
      host: localhost
      port: 6379
      password: 
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  
  # Security Configuration
  security:
    user:
      name: admin
      password: admin123
      roles: ADMIN

# JWT Configuration
jwt:
  secret: dev-secret-key-change-in-production-very-long-and-secure
  expiration: 86400000  # 24 hours
  refresh-expiration: 604800000  # 7 days

# Logging Configuration
logging:
  level:
    com.bmessi.pickupsportsapp: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api
  error:
    include-message: always
    include-binding-errors: always

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true

# Swagger Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
  default-produces-media-type: application/json
  default-consumes-media-type: application/json

# Rate Limiting Configuration
rate-limit:
  max-requests-per-minute: 1000
  max-requests-per-hour: 10000

# AI Configuration
ai:
  recommendation:
    enabled: true
    model-version: "1.0.0"
    confidence-threshold: 0.7
  machine-learning:
    enabled: true
    training-interval-hours: 24

# Real-time Configuration
websocket:
  enabled: true
  max-text-message-size: 8192
  max-binary-message-size: 8192

# Geolocation Configuration
geolocation:
  default-search-radius-km: 10.0
  max-search-radius-km: 50.0
  cache-enabled: true
  cache-ttl-seconds: 3600

# Feature Flags
feature-flags:
  advanced-ai: true
  real-time-features: true
  mobile-optimization: true
  multi-tenancy: true
  gdpr-compliance: true

