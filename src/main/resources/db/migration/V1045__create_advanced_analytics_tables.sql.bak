-- Migration: Create Advanced Analytics tables
-- Version: V1045
-- Description: Creates tables for analytics events, performance metrics, business intelligence, and predictive analytics

-- Analytics events table
CREATE TABLE analytics_events (
    id BIGSERIAL PRIMARY KEY,
    user_id BIGINT,
    session_id VARCHAR(100),
    event_type VARCHAR(100) NOT NULL,
    event_category VARCHAR(100),
    event_action VARCHAR(100),
    event_label VARCHAR(200),
    event_value DECIMAL(15,6),
    page_url VARCHAR(500),
    referrer_url VARCHAR(500),
    user_agent VARCHAR(500),
    ip_address VARCHAR(45),
    device_type VARCHAR(50),
    operating_system VARCHAR(100),
    browser VARCHAR(100),
    screen_resolution VARCHAR(50),
    language VARCHAR(10),
    timezone VARCHAR(50),
    latitude DECIMAL(10,8),
    longitude DECIMAL(11,8),
    city VARCHAR(100),
    state VARCHAR(100),
    country VARCHAR(100),
    postal_code VARCHAR(20),
    load_time_ms INTEGER,
    interaction_time_ms INTEGER,
    scroll_depth_percentage INTEGER,
    time_on_page_seconds INTEGER,
    bounce_rate BOOLEAN,
    conversion_goal VARCHAR(100),
    conversion_value DECIMAL(10,2),
    funnel_step VARCHAR(50),
    ab_test_variant VARCHAR(100),
    feature_flag VARCHAR(100),
    custom_attributes TEXT,
    error_message VARCHAR(500),
    error_stack_trace TEXT,
    performance_metrics TEXT,
    network_conditions VARCHAR(100),
    battery_level INTEGER,
    is_offline BOOLEAN NOT NULL DEFAULT FALSE,
    app_version VARCHAR(50),
    platform_version VARCHAR(50),
    event_timestamp TIMESTAMP WITH TIME ZONE NOT NULL,
    processed BOOLEAN NOT NULL DEFAULT FALSE,
    processing_priority INTEGER,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    
    CONSTRAINT fk_analytics_events_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL,
    CONSTRAINT chk_analytics_events_latitude CHECK (latitude >= -90 AND latitude <= 90),
    CONSTRAINT chk_analytics_events_longitude CHECK (longitude >= -180 AND longitude <= 180),
    CONSTRAINT chk_analytics_events_battery_level CHECK (battery_level >= 0 AND battery_level <= 100),
    CONSTRAINT chk_analytics_events_scroll_depth CHECK (scroll_depth_percentage >= 0 AND scroll_depth_percentage <= 100)
);

-- Performance metrics table
CREATE TABLE performance_metrics (
    id BIGSERIAL PRIMARY KEY,
    metric_name VARCHAR(100) NOT NULL,
    metric_category VARCHAR(100),
    metric_type VARCHAR(50) NOT NULL,
    metric_value DECIMAL(15,6) NOT NULL,
    metric_unit VARCHAR(20),
    min_value DECIMAL(15,6),
    max_value DECIMAL(15,6),
    avg_value DECIMAL(15,6),
    p50_value DECIMAL(15,6),
    p90_value DECIMAL(15,6),
    p95_value DECIMAL(15,6),
    p99_value DECIMAL(15,6),
    sample_count BIGINT,
    sample_rate DECIMAL(5,4),
    endpoint VARCHAR(200),
    http_method VARCHAR(10),
    http_status_code INTEGER,
    response_size_bytes BIGINT,
    request_size_bytes BIGINT,
    database_query VARCHAR(1000),
    database_connection_pool_size INTEGER,
    database_active_connections INTEGER,
    database_idle_connections INTEGER,
    cache_hit_rate DECIMAL(5,4),
    cache_size_bytes BIGINT,
    cache_eviction_count BIGINT,
    memory_usage_bytes BIGINT,
    memory_max_bytes BIGINT,
    cpu_usage_percentage DECIMAL(5,2),
    disk_usage_percentage DECIMAL(5,2),
    network_io_bytes_per_second BIGINT,
    thread_count INTEGER,
    active_thread_count INTEGER,
    queue_size INTEGER,
    processing_time_ms BIGINT,
    wait_time_ms BIGINT,
    timeout_count BIGINT,
    error_count BIGINT,
    success_count BIGINT,
    retry_count BIGINT,
    circuit_breaker_state VARCHAR(20),
    bulkhead_available_permits INTEGER,
    bulkhead_max_permits INTEGER,
    rate_limiter_available_permits INTEGER,
    rate_limiter_max_permits INTEGER,
    external_service_name VARCHAR(100),
    external_service_endpoint VARCHAR(500),
    external_service_response_time_ms BIGINT,
    external_service_success_rate DECIMAL(5,4),
    environment VARCHAR(50),
    instance_id VARCHAR(100),
    version VARCHAR(50),
    tags VARCHAR(500),
    metadata TEXT,
    measurement_timestamp TIMESTAMP WITH TIME ZONE NOT NULL,
    collection_interval_seconds INTEGER,
    alert_threshold DECIMAL(15,6),
    alert_enabled BOOLEAN NOT NULL DEFAULT FALSE,
    last_alert_sent TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    
    CONSTRAINT chk_performance_metrics_type CHECK (metric_type IN ('gauge', 'counter', 'histogram', 'summary')),
    CONSTRAINT chk_performance_metrics_cache_hit_rate CHECK (cache_hit_rate >= 0.0000 AND cache_hit_rate <= 1.0000),
    CONSTRAINT chk_performance_metrics_cpu_usage CHECK (cpu_usage_percentage >= 0.00 AND cpu_usage_percentage <= 100.00),
    CONSTRAINT chk_performance_metrics_disk_usage CHECK (disk_usage_percentage >= 0.00 AND disk_usage_percentage <= 100.00),
    CONSTRAINT chk_performance_metrics_sample_rate CHECK (sample_rate >= 0.0000 AND sample_rate <= 1.0000),
    CONSTRAINT chk_performance_metrics_external_service_success_rate CHECK (external_service_success_rate >= 0.0000 AND external_service_success_rate <= 1.0000),
    CONSTRAINT chk_performance_metrics_circuit_breaker_state CHECK (circuit_breaker_state IN ('CLOSED', 'OPEN', 'HALF_OPEN'))
);

-- Business intelligence table
CREATE TABLE business_intelligence (
    id BIGSERIAL PRIMARY KEY,
    metric_name VARCHAR(100) NOT NULL,
    metric_category VARCHAR(100),
    metric_type VARCHAR(50) NOT NULL,
    metric_value DECIMAL(15,6) NOT NULL,
    metric_unit VARCHAR(20),
    previous_value DECIMAL(15,6),
    change_amount DECIMAL(15,6),
    change_percentage DECIMAL(8,4),
    target_value DECIMAL(15,6),
    target_achievement_percentage DECIMAL(8,4),
    period_type VARCHAR(20),
    period_start TIMESTAMP WITH TIME ZONE NOT NULL,
    period_end TIMESTAMP WITH TIME ZONE NOT NULL,
    year INTEGER,
    month INTEGER,
    week INTEGER,
    day_of_year INTEGER,
    day_of_week INTEGER,
    hour INTEGER,
    revenue DECIMAL(15,2),
    cost DECIMAL(15,2),
    profit DECIMAL(15,2),
    profit_margin DECIMAL(8,4),
    average_order_value DECIMAL(10,2),
    customer_lifetime_value DECIMAL(10,2),
    customer_acquisition_cost DECIMAL(10,2),
    return_on_investment DECIMAL(8,4),
    total_users BIGINT,
    active_users BIGINT,
    new_users BIGINT,
    returning_users BIGINT,
    churned_users BIGINT,
    user_growth_rate DECIMAL(8,4),
    retention_rate DECIMAL(8,4),
    churn_rate DECIMAL(8,4),
    engagement_rate DECIMAL(8,4),
    session_duration_minutes INTEGER,
    sessions_per_user DECIMAL(8,4),
    page_views_per_session DECIMAL(8,4),
    total_games BIGINT,
    active_games BIGINT,
    completed_games BIGINT,
    cancelled_games BIGINT,
    game_creation_rate DECIMAL(8,4),
    game_completion_rate DECIMAL(8,4),
    total_venues BIGINT,
    active_venues BIGINT,
    venue_utilization_rate DECIMAL(8,4),
    total_bookings BIGINT,
    confirmed_bookings BIGINT,
    cancelled_bookings BIGINT,
    booking_confirmation_rate DECIMAL(8,4),
    total_tournaments BIGINT,
    active_tournaments BIGINT,
    completed_tournaments BIGINT,
    tournament_participation_rate DECIMAL(8,4),
    average_tournament_size DECIMAL(8,4),
    total_equipment BIGINT,
    available_equipment BIGINT,
    rented_equipment BIGINT,
    equipment_utilization_rate DECIMAL(8,4),
    equipment_revenue DECIMAL(15,2),
    city VARCHAR(100),
    state VARCHAR(100),
    country VARCHAR(100),
    latitude DECIMAL(10,8),
    longitude DECIMAL(11,8),
    sport VARCHAR(50),
    sport_popularity_rank INTEGER,
    sport_participation_rate DECIMAL(8,4),
    marketing_spend DECIMAL(15,2),
    marketing_roi DECIMAL(8,4),
    customer_acquisition_rate DECIMAL(8,4),
    referral_rate DECIMAL(8,4),
    system_uptime_percentage DECIMAL(8,4),
    average_response_time_ms BIGINT,
    error_rate DECIMAL(8,4),
    support_tickets BIGINT,
    resolved_tickets BIGINT,
    average_resolution_time_hours DECIMAL(8,4),
    predicted_revenue DECIMAL(15,2),
    predicted_users DECIMAL(15,0),
    prediction_confidence DECIMAL(5,4),
    trend_direction VARCHAR(20),
    seasonality_factor DECIMAL(8,4),
    forecast_horizon_days INTEGER,
    data_quality_score DECIMAL(5,4),
    last_updated TIMESTAMP WITH TIME ZONE,
    update_frequency_hours INTEGER,
    data_source VARCHAR(100),
    calculation_method VARCHAR(200),
    notes VARCHAR(1000),
    tags VARCHAR(500),
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    
    CONSTRAINT chk_business_intelligence_type CHECK (metric_type IN ('gauge', 'counter', 'ratio', 'percentage', 'currency')),
    CONSTRAINT chk_business_intelligence_period_type CHECK (period_type IN ('daily', 'weekly', 'monthly', 'quarterly', 'yearly')),
    CONSTRAINT chk_business_intelligence_month CHECK (month >= 1 AND month <= 12),
    CONSTRAINT chk_business_intelligence_week CHECK (week >= 1 AND week <= 53),
    CONSTRAINT chk_business_intelligence_day_of_year CHECK (day_of_year >= 1 AND day_of_year <= 366),
    CONSTRAINT chk_business_intelligence_day_of_week CHECK (day_of_week >= 1 AND day_of_week <= 7),
    CONSTRAINT chk_business_intelligence_hour CHECK (hour >= 0 AND hour <= 23),
    CONSTRAINT chk_business_intelligence_period_dates CHECK (period_start < period_end),
    CONSTRAINT chk_business_intelligence_latitude CHECK (latitude >= -90 AND latitude <= 90),
    CONSTRAINT chk_business_intelligence_longitude CHECK (longitude >= -180 AND longitude <= 180),
    CONSTRAINT chk_business_intelligence_percentages CHECK (
        (profit_margin IS NULL OR (profit_margin >= 0.0000 AND profit_margin <= 100.0000)) AND
        (user_growth_rate IS NULL OR (user_growth_rate >= 0.0000 AND user_growth_rate <= 100.0000)) AND
        (retention_rate IS NULL OR (retention_rate >= 0.0000 AND retention_rate <= 100.0000)) AND
        (churn_rate IS NULL OR (churn_rate >= 0.0000 AND churn_rate <= 100.0000)) AND
        (engagement_rate IS NULL OR (engagement_rate >= 0.0000 AND engagement_rate <= 100.0000)) AND
        (venue_utilization_rate IS NULL OR (venue_utilization_rate >= 0.0000 AND venue_utilization_rate <= 100.0000)) AND
        (equipment_utilization_rate IS NULL OR (equipment_utilization_rate >= 0.0000 AND equipment_utilization_rate <= 100.0000)) AND
        (game_completion_rate IS NULL OR (game_completion_rate >= 0.0000 AND game_completion_rate <= 100.0000)) AND
        (tournament_participation_rate IS NULL OR (tournament_participation_rate >= 0.0000 AND tournament_participation_rate <= 100.0000)) AND
        (sport_participation_rate IS NULL OR (sport_participation_rate >= 0.0000 AND sport_participation_rate <= 100.0000)) AND
        (marketing_roi IS NULL OR (marketing_roi >= 0.0000 AND marketing_roi <= 100.0000)) AND
        (referral_rate IS NULL OR (referral_rate >= 0.0000 AND referral_rate <= 100.0000)) AND
        (system_uptime_percentage IS NULL OR (system_uptime_percentage >= 0.0000 AND system_uptime_percentage <= 100.0000)) AND
        (error_rate IS NULL OR (error_rate >= 0.0000 AND error_rate <= 100.0000)) AND
        (prediction_confidence IS NULL OR (prediction_confidence >= 0.0000 AND prediction_confidence <= 1.0000)) AND
        (data_quality_score IS NULL OR (data_quality_score >= 0.0000 AND data_quality_score <= 1.0000))
    )
);

-- Predictive analytics table
CREATE TABLE predictive_analytics (
    id BIGSERIAL PRIMARY KEY,
    prediction_type VARCHAR(100) NOT NULL,
    prediction_category VARCHAR(100),
    model_name VARCHAR(100) NOT NULL,
    model_version VARCHAR(50),
    model_accuracy DECIMAL(5,4),
    model_precision DECIMAL(5,4),
    model_recall DECIMAL(5,4),
    model_f1_score DECIMAL(5,4),
    model_auc DECIMAL(5,4),
    prediction_horizon_days INTEGER,
    prediction_confidence DECIMAL(5,4),
    prediction_interval_lower DECIMAL(15,6),
    prediction_interval_upper DECIMAL(15,6),
    predicted_value DECIMAL(15,6) NOT NULL,
    actual_value DECIMAL(15,6),
    prediction_error DECIMAL(15,6),
    prediction_error_percentage DECIMAL(8,4),
    prediction_timestamp TIMESTAMP WITH TIME ZONE NOT NULL,
    actual_timestamp TIMESTAMP WITH TIME ZONE,
    target_entity_type VARCHAR(100),
    target_entity_id BIGINT,
    target_entity_attributes TEXT,
    user_id BIGINT,
    churn_probability DECIMAL(5,4),
    engagement_score DECIMAL(5,4),
    lifetime_value_prediction DECIMAL(10,2),
    next_purchase_probability DECIMAL(5,4),
    preferred_sport VARCHAR(50),
    activity_frequency_prediction INTEGER,
    social_influence_score DECIMAL(5,4),
    revenue_prediction DECIMAL(15,2),
    user_growth_prediction BIGINT,
    conversion_rate_prediction DECIMAL(8,4),
    retention_rate_prediction DECIMAL(8,4),
    customer_acquisition_cost_prediction DECIMAL(10,2),
    market_share_prediction DECIMAL(8,4),
    venue_utilization_prediction DECIMAL(8,4),
    equipment_demand_prediction BIGINT,
    maintenance_schedule_prediction TIMESTAMP WITH TIME ZONE,
    equipment_failure_probability DECIMAL(5,4),
    peak_usage_time_prediction TIMESTAMP WITH TIME ZONE,
    capacity_requirement_prediction BIGINT,
    game_attendance_prediction BIGINT,
    tournament_participation_prediction BIGINT,
    game_cancellation_probability DECIMAL(5,4),
    weather_impact_prediction DECIMAL(5,4),
    optimal_game_time_prediction TIMESTAMP WITH TIME ZONE,
    optimal_venue_prediction BIGINT,
    campaign_effectiveness_prediction DECIMAL(5,4),
    customer_segment_prediction VARCHAR(100),
    personalization_score DECIMAL(5,4),
    recommendation_click_probability DECIMAL(5,4),
    ad_conversion_probability DECIMAL(5,4),
    feature_importance TEXT,
    model_insights TEXT,
    data_drift_score DECIMAL(5,4),
    model_drift_score DECIMAL(5,4),
    retraining_recommendation VARCHAR(100),
    next_retraining_date TIMESTAMP WITH TIME ZONE,
    training_data_size BIGINT,
    training_duration_minutes INTEGER,
    last_training_date TIMESTAMP WITH TIME ZONE,
    hyperparameters TEXT,
    feature_engineering_steps TEXT,
    data_preprocessing_steps TEXT,
    cross_validation_score DECIMAL(5,4),
    test_set_score DECIMAL(5,4),
    holdout_set_score DECIMAL(5,4),
    backtesting_score DECIMAL(5,4),
    out_of_sample_score DECIMAL(5,4),
    business_impact_score DECIMAL(5,4),
    roi_prediction DECIMAL(8,4),
    cost_savings_prediction DECIMAL(15,2),
    revenue_increase_prediction DECIMAL(15,2),
    risk_assessment VARCHAR(100),
    confidence_interval_width DECIMAL(15,6),
    prediction_stability_score DECIMAL(5,4),
    seasonality_detected BOOLEAN NOT NULL DEFAULT FALSE,
    trend_detected BOOLEAN NOT NULL DEFAULT FALSE,
    cyclical_pattern_detected BOOLEAN NOT NULL DEFAULT FALSE,
    anomaly_detected BOOLEAN NOT NULL DEFAULT FALSE,
    data_quality_issues TEXT,
    model_limitations TEXT,
    recommendations TEXT,
    notes VARCHAR(1000),
    tags VARCHAR(500),
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    
    CONSTRAINT chk_predictive_analytics_percentages CHECK (
        (model_accuracy IS NULL OR (model_accuracy >= 0.0000 AND model_accuracy <= 1.0000)) AND
        (model_precision IS NULL OR (model_precision >= 0.0000 AND model_precision <= 1.0000)) AND
        (model_recall IS NULL OR (model_recall >= 0.0000 AND model_recall <= 1.0000)) AND
        (model_f1_score IS NULL OR (model_f1_score >= 0.0000 AND model_f1_score <= 1.0000)) AND
        (model_auc IS NULL OR (model_auc >= 0.0000 AND model_auc <= 1.0000)) AND
        (prediction_confidence IS NULL OR (prediction_confidence >= 0.0000 AND prediction_confidence <= 1.0000)) AND
        (churn_probability IS NULL OR (churn_probability >= 0.0000 AND churn_probability <= 1.0000)) AND
        (engagement_score IS NULL OR (engagement_score >= 0.0000 AND engagement_score <= 1.0000)) AND
        (next_purchase_probability IS NULL OR (next_purchase_probability >= 0.0000 AND next_purchase_probability <= 1.0000)) AND
        (social_influence_score IS NULL OR (social_influence_score >= 0.0000 AND social_influence_score <= 1.0000)) AND
        (conversion_rate_prediction IS NULL OR (conversion_rate_prediction >= 0.0000 AND conversion_rate_prediction <= 100.0000)) AND
        (retention_rate_prediction IS NULL OR (retention_rate_prediction >= 0.0000 AND retention_rate_prediction <= 100.0000)) AND
        (market_share_prediction IS NULL OR (market_share_prediction >= 0.0000 AND market_share_prediction <= 100.0000)) AND
        (venue_utilization_prediction IS NULL OR (venue_utilization_prediction >= 0.0000 AND venue_utilization_prediction <= 100.0000)) AND
        (equipment_failure_probability IS NULL OR (equipment_failure_probability >= 0.0000 AND equipment_failure_probability <= 1.0000)) AND
        (game_cancellation_probability IS NULL OR (game_cancellation_probability >= 0.0000 AND game_cancellation_probability <= 1.0000)) AND
        (weather_impact_prediction IS NULL OR (weather_impact_prediction >= 0.0000 AND weather_impact_prediction <= 1.0000)) AND
        (campaign_effectiveness_prediction IS NULL OR (campaign_effectiveness_prediction >= 0.0000 AND campaign_effectiveness_prediction <= 1.0000)) AND
        (personalization_score IS NULL OR (personalization_score >= 0.0000 AND personalization_score <= 1.0000)) AND
        (recommendation_click_probability IS NULL OR (recommendation_click_probability >= 0.0000 AND recommendation_click_probability <= 1.0000)) AND
        (ad_conversion_probability IS NULL OR (ad_conversion_probability >= 0.0000 AND ad_conversion_probability <= 1.0000)) AND
        (data_drift_score IS NULL OR (data_drift_score >= 0.0000 AND data_drift_score <= 1.0000)) AND
        (model_drift_score IS NULL OR (model_drift_score <= 1.0000)) AND
        (cross_validation_score IS NULL OR (cross_validation_score >= 0.0000 AND cross_validation_score <= 1.0000)) AND
        (test_set_score IS NULL OR (test_set_score >= 0.0000 AND test_set_score <= 1.0000)) AND
        (holdout_set_score IS NULL OR (holdout_set_score >= 0.0000 AND holdout_set_score <= 1.0000)) AND
        (backtesting_score IS NULL OR (backtesting_score >= 0.0000 AND backtesting_score <= 1.0000)) AND
        (out_of_sample_score IS NULL OR (out_of_sample_score >= 0.0000 AND out_of_sample_score <= 1.0000)) AND
        (business_impact_score IS NULL OR (business_impact_score >= 0.0000 AND business_impact_score <= 1.0000)) AND
        (prediction_stability_score IS NULL OR (prediction_stability_score >= 0.0000 AND prediction_stability_score <= 1.0000))
    ),
    CONSTRAINT chk_predictive_analytics_risk_assessment CHECK (risk_assessment IN ('low', 'medium', 'high', 'critical')),
    CONSTRAINT chk_predictive_analytics_retraining_recommendation CHECK (retraining_recommendation IN ('immediate', 'soon', 'not_needed')),
    CONSTRAINT chk_predictive_analytics_prediction_timestamp CHECK (prediction_timestamp <= NOW()),
    CONSTRAINT chk_predictive_analytics_actual_timestamp CHECK (actual_timestamp IS NULL OR actual_timestamp >= prediction_timestamp)
);

-- Create indexes for better performance
CREATE INDEX idx_analytics_events_user ON analytics_events(user_id);
CREATE INDEX idx_analytics_events_session ON analytics_events(session_id);
CREATE INDEX idx_analytics_events_type ON analytics_events(event_type);
CREATE INDEX idx_analytics_events_category ON analytics_events(event_category);
CREATE INDEX idx_analytics_events_timestamp ON analytics_events(event_timestamp);
CREATE INDEX idx_analytics_events_processed ON analytics_events(processed);
CREATE INDEX idx_analytics_events_location ON analytics_events(latitude, longitude);
CREATE INDEX idx_analytics_events_conversion ON analytics_events(conversion_goal, conversion_value);

CREATE INDEX idx_performance_metrics_name ON performance_metrics(metric_name);
CREATE INDEX idx_performance_metrics_category ON performance_metrics(metric_category);
CREATE INDEX idx_performance_metrics_type ON performance_metrics(metric_type);
CREATE INDEX idx_performance_metrics_timestamp ON performance_metrics(measurement_timestamp);
CREATE INDEX idx_performance_metrics_endpoint ON performance_metrics(endpoint);
CREATE INDEX idx_performance_metrics_environment ON performance_metrics(environment);
CREATE INDEX idx_performance_metrics_instance ON performance_metrics(instance_id);

CREATE INDEX idx_business_intelligence_name ON business_intelligence(metric_name);
CREATE INDEX idx_business_intelligence_category ON business_intelligence(metric_category);
CREATE INDEX idx_business_intelligence_period ON business_intelligence(period_start, period_end);
CREATE INDEX idx_business_intelligence_type ON business_intelligence(period_type);
CREATE INDEX idx_business_intelligence_year_month ON business_intelligence(year, month);
CREATE INDEX idx_business_intelligence_sport ON business_intelligence(sport);
CREATE INDEX idx_business_intelligence_location ON business_intelligence(latitude, longitude);

CREATE INDEX idx_predictive_analytics_type ON predictive_analytics(prediction_type);
CREATE INDEX idx_predictive_analytics_category ON predictive_analytics(prediction_category);
CREATE INDEX idx_predictive_analytics_model ON predictive_analytics(model_name, model_version);
CREATE INDEX idx_predictive_analytics_timestamp ON predictive_analytics(prediction_timestamp);
CREATE INDEX idx_predictive_analytics_entity ON predictive_analytics(target_entity_type, target_entity_id);
CREATE INDEX idx_predictive_analytics_user ON predictive_analytics(user_id);
CREATE INDEX idx_predictive_analytics_confidence ON predictive_analytics(prediction_confidence);

-- Create updated_at triggers
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_analytics_events_updated_at BEFORE UPDATE ON analytics_events
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_performance_metrics_updated_at BEFORE UPDATE ON performance_metrics
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_business_intelligence_updated_at BEFORE UPDATE ON business_intelligence
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_predictive_analytics_updated_at BEFORE UPDATE ON predictive_analytics
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- Add comments for documentation
COMMENT ON TABLE analytics_events IS 'User behavior and app usage analytics events';
COMMENT ON TABLE performance_metrics IS 'Application performance and system health metrics';
COMMENT ON TABLE business_intelligence IS 'Business metrics and KPIs for decision making';
COMMENT ON TABLE predictive_analytics IS 'Machine learning predictions and forecasting models';

-- Insert sample performance metrics for monitoring
INSERT INTO performance_metrics (metric_name, metric_category, metric_type, metric_value, metric_unit, measurement_timestamp, alert_enabled, alert_threshold) VALUES
('response_time', 'api', 'histogram', 150.0, 'ms', NOW(), true, 500.0),
('throughput', 'api', 'counter', 1000.0, 'requests_per_second', NOW(), true, 500.0),
('error_rate', 'api', 'gauge', 0.02, 'percentage', NOW(), true, 0.05),
('cpu_usage', 'system', 'gauge', 45.0, 'percentage', NOW(), true, 80.0),
('memory_usage', 'system', 'gauge', 60.0, 'percentage', NOW(), true, 85.0),
('cache_hit_rate', 'cache', 'gauge', 0.85, 'ratio', NOW(), true, 0.70),
('database_connections', 'database', 'gauge', 25.0, 'connections', NOW(), true, 80.0),
('active_threads', 'system', 'gauge', 15.0, 'threads', NOW(), true, 50.0);

-- Insert sample business intelligence metrics
INSERT INTO business_intelligence (metric_name, metric_category, metric_type, metric_value, metric_unit, period_type, period_start, period_end, year, month, day_of_year, data_source, calculation_method) VALUES
('total_users', 'user_metrics', 'counter', 15000.0, 'users', 'daily', NOW() - INTERVAL '1 day', NOW(), EXTRACT(YEAR FROM NOW()), EXTRACT(MONTH FROM NOW()), EXTRACT(DOY FROM NOW()), 'user_registration', 'COUNT(DISTINCT user_id)'),
('active_users', 'user_metrics', 'gauge', 8500.0, 'users', 'daily', NOW() - INTERVAL '1 day', NOW(), EXTRACT(YEAR FROM NOW()), EXTRACT(MONTH FROM NOW()), EXTRACT(DOY FROM NOW()), 'user_activity', 'COUNT(DISTINCT user_id WHERE last_activity > NOW() - INTERVAL ''7 days'')'),
('revenue', 'financial', 'counter', 25000.0, 'dollars', 'daily', NOW() - INTERVAL '1 day', NOW(), EXTRACT(YEAR FROM NOW()), EXTRACT(MONTH FROM NOW()), EXTRACT(DOY FROM NOW()), 'payment_processing', 'SUM(amount)'),
('venue_utilization', 'operational', 'gauge', 0.75, 'percentage', 'daily', NOW() - INTERVAL '1 day', NOW(), EXTRACT(YEAR FROM NOW()), EXTRACT(MONTH FROM NOW()), EXTRACT(DOY FROM NOW()), 'venue_bookings', 'AVG(utilization_rate)'),
('game_completion_rate', 'operational', 'gauge', 0.92, 'percentage', 'daily', NOW() - INTERVAL '1 day', NOW(), EXTRACT(YEAR FROM NOW()), EXTRACT(MONTH FROM NOW()), EXTRACT(DOY FROM NOW()), 'game_status', 'COUNT(completed) / COUNT(total)');
