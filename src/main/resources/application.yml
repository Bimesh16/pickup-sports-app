# src/main/resources/application.yml
chat:
  redis:
    enabled: false         # <â€” run fine without Redis in dev
    channel: chat-messages
  ratelimit:
    enabled: true
    perSecond: 10
    userBurst: 20
    userBurstWindowMillis: 10000
  subscription:
    max: 50
  moderation:
    enabled: true
    reject: false
    words: ["badword"]
    # dictionaryPath: "classpath:moderation/profanity.txt"

spring:
  redis:
    host: localhost
    port: 6379
    # password: yourpass # if you set one
  rabbitmq:
    listener:
      simple:
        retry:
          enabled: true
          max-attempts: 3
          initial-interval: 1s
        default-requeue-rejected: false
    template:
      retry:
        enabled: true
        max-attempts: 3
        initial-interval: 1s
  cache:
    cache-names:
      - user-profiles
      - search-filters # caches search filters response (TTL 5m, key=SimpleKey.EMPTY)
    caffeine:
      spec: maximumSize=10000,expireAfterWrite=5m # TTL for caches

xai:
  enabled: true

security:
  jwt:
    secret: "this-is-my-local-dev-secret-change-me"
    issuer: "pickup-sports-app"
    audience: "pickup-sports-clients"
    expirationMinutes: 120
    header: "Authorization"
    prefix: "Bearer "

management:
  endpoints:
    web:
      exposure:
        include: "health,info,metrics"
  endpoint:
    health:
      show-details: "never"   # set 'always' if you want details in dev
      probes:
        enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
    xai:
      enabled: false
  server:
    base-path: /actuator      # default, explicit for clarity

  tracing:
    enabled: false
    sampling:
      probability: 1.0

  otlp:
    tracing:
      endpoint: ${OTEL_EXPORTER_OTLP_ENDPOINT:http://localhost:4317}

# Swagger/OpenAPI enabled in dev
springdoc:
  swagger-ui.enabled: true
  api-docs.enabled: true
  use-kotlin: false

resilience4j:
  retry:
    instances:
      xai:
        max-attempts: 3
        wait-duration: 200ms
      mail:
        max-attempts: 3
        wait-duration: 500ms
  timelimiter:
    instances:
      xai:
        timeout-duration: 2s
  ratelimiter:
    instances:
      xai:
        limit-for-period: 10
        limit-refresh-period: 1s
        timeout-duration: 0
      auth:
        limit-for-period: 5
        limit-refresh-period: 10s
        timeout-duration: 0
      chat:
        limit-for-period: 20
        limit-refresh-period: 1s
        timeout-duration: 0
  circuitbreaker:
    instances:
      xai:
        sliding-window-size: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 5s

# ------------------------------
# App configuration (new defaults)
# ------------------------------
auth:
  verification-required: false
  verification-ttl-hours: 24
  reset-ttl-hours: 2
  app-url: "http://localhost:8080"
  change-email-invalidate-sessions: true
  resend:
    max-per-user-per-minute: 3
    max-per-ip-per-minute: 10
  login:
    distributed-enabled: false
    max-failures-per-user: 5
    max-failures-per-ip: 30
    lockout-minutes: 15
    ip-window-minutes: 10
  rate-limit:
    distributed:
      enabled: false
    window-seconds: 60

media:
  avatar:
    max-bytes: 2097152 # 2MB limit
    allowed-types: "image/png,image/jpeg,image/webp"
    thumbnail:
      enabled: true
      width: 200
      height: 200
    max-width: 2000
    max-height: 2000
    absolute-max-width: 8000
    absolute-max-height: 8000
    strip-metadata: true
    include-thumbnail-header: false

app:
  media:
    storage:
      provider: local
    s3:
      bucket: your-bucket
      region: us-east-1
      endpoint:
      prefix:
      public-base-url:
      presign:
        enabled: false
        ttlSeconds: 900

retention:
  chat:
    messages:
      days: 60
    read-receipts:
      days: 60

notifications:
  queue: notifications.queue

emails:
  queue: emails.queue


