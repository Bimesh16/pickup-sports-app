services:
  db:
    image: postgres:16
    container_name: pickup_db
    environment:
      POSTGRES_DB: soccer_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  mailhog:
    image: mailhog/mailhog:latest
    container_name: pickup_mailhog
    ports:
      - "8025:8025"  # Web UI only; app reaches SMTP via service name 'mailhog' on port 1025

  redis:
    image: redis:7-alpine
    container_name: pickup_redis
    command: ["redis-server", "--appendonly", "yes"]
    # No host port mapping needed; app connects via service name 'redis'

  app:
    build:
      context: .
    container_name: pickup_app
    depends_on:
      - db
      - mailhog
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/soccer_app
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: yourpassword
      SPRING_JPA_HIBERNATE_DDL_AUTO: none

      # Mail (acts as health source and for welcome emails)
      SPRING_MAIL_HOST: mailhog
      SPRING_MAIL_PORT: "1025"

      # Redis (available for staging/scale; disabled below by default)
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: "6379"
      CHAT_REDIS_ENABLED: "false"   # flip to "true" when you want to fan-out via Redis

      # JWT secret (use a long random value in real environments)
      SECURITY_JWT_SECRET: change-me-please-min-32-chars-secret

      # Swagger in dev
      SPRINGDOC_SWAGGER_UI_ENABLED: "true"
      SPRINGDOC_API_DOCS_ENABLED: "true"

      # Login rate limit (per IP per minute)
      SECURITY_LOGIN_RATE_LIMIT: "20"
    ports:
      - "8080:8080"

volumes:
  db_data:
