version: "3.8"

services:
  db:
    image: postgres:15
    container_name: ps-postgres
    environment:
      POSTGRES_DB: soccer_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d soccer_app || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: ps-redis
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10

  mailpit:
    image: axllent/mailpit:latest
    container_name: ps-mailpit

  app:
    container_name: pickupsports-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      mailpit:
        condition: service_started
      redis:
        condition: service_healthy
    environment:
      # Spring profile
      SPRING_PROFILES_ACTIVE: dev

      # DataSource -> points at db service
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/soccer_app
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres

      # Redis (enable only if you turn on distributed rate-limits or chat Redis fan-out)
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379

      # Mail (point to Mailpit)
      SPRING_MAIL_HOST: mailpit
      SPRING_MAIL_PORT: 1025
      SPRING_MAIL_USERNAME: ""
      SPRING_MAIL_PASSWORD: ""
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "false"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: "false"

      # Media storage (local in-container path)
      APP_MEDIA_BASE_PATH: /data/media
      APP_MEDIA_BASE_URL: /media

      # Toggle Redis-based features (keep off by default for dev)
      AUTH_RATE-LIMIT_DISTRIBUTED_ENABLED: "false"
      CHAT_REDIS_ENABLED: "false"

    volumes:
      - media_data:/data/media

volumes:
  postgres_data:
  media_data:
